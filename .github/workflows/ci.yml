name: Adam Web App CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
        - 6379:6379
      db:
        image: postgres:13-alpine
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
      neo4j:
        image: neo4j:4.4
        ports:
        - 7474:7474
        - 7687:7687
        env:
          NEO4J_AUTH: neo4j/password


    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Set up Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Node.js dependencies
      working-directory: ./services/webapp/client
      run: npm install

    - name: Run backend tests
      env:
        FLASK_CONFIG: testing
        DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
        CELERY_BROKER_URL: redis://localhost:6379/0
        CELERY_RESULT_BACKEND: redis://localhost:6379/0
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: password
      run: |
        export PYTHONPATH=.
        python -m unittest discover services/webapp

    - name: Run frontend tests
      working-directory: ./services/webapp/client
      run: npm test

    - name: Lint frontend
      working-directory: ./services/webapp/client
      run: npm run eject -- --force && npm install eslint --save-dev && npx eslint src

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false # Set to true to push to a registry
        tags: adam-webapp:latest
